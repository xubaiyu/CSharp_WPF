<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:BFloor="clr-namespace:BuildingFloor"
    xmlns:ViewModel="clr-namespace:BuildingFloor.ViewModels"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
    x:Class="BuildingFloor.MainWindow"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight"
        Title="MainWindow" Height="700" Width="1050">
    <Window.DataContext>
        <ViewModel:MyViewModel/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <cmd:EventToCommand Command="{Binding ClosedCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>


        <DataTemplate x:Key="DataTemplate1">
            <TextBlock Text="{Binding Path=FloorNo,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            
        </DataTemplate>

        <CollectionViewSource x:Key="floors" Source="{Binding Source=alist, Path=alist}"/>

            <Style TargetType="DataGrid">
                <!--网格线颜色-->

                <Setter Property="CanUserResizeColumns"   Value="false" /> 

                <Setter Property="Background"   Value="#E6DBBB" />

                <Setter Property="BorderBrush"    Value="#d6c79b" />

                <Setter Property="HorizontalGridLinesBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="#d6c79b" />
                    </Setter.Value>
                </Setter>

                <Setter Property="VerticalGridLinesBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="#d6c79b" />
                    </Setter.Value>
               </Setter>
            </Style>

            <!--标题栏样式-->

            <!--<Style  TargetType="DataGridColumnHeader" >

        <Setter Property="Width" Value="50"/>  

       <Setter Property="Height" Value="30"/>     

    <Setter Property="FontSize" Value="14" />    

     <Setter Property="Background" Value="White" />    

     <Setter  Property="FontWeight"  Value="Bold"/>   

  </Style>-->

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="SnapsToDevicePixels"   Value="True" />
                <Setter Property="MinWidth"   Value="0" />
                <Setter Property="MinHeight"   Value="28" />
                <Setter Property="Foreground"    Value="#323433" />
                <Setter Property="FontSize"   Value="14" />
                <Setter Property="Cursor"     Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Border x:Name="BackgroundBorder"    BorderThickness="0,1,0,1"   BorderBrush="#e6dbba"  Width="Auto">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter  Margin="0,0,0,0"  VerticalAlignment="Center"  HorizontalAlignment="Center" />
                                    <Path x:Name="SortArrow"  Visibility="Collapsed"   Data="M0,0 L1,0 0.5,1 z"  Stretch="Fill"    Grid.Column="2"    
                                       Width="8" Height="6" Fill="White" Margin="0,0,50,0"  VerticalAlignment="Center"     
                                      RenderTransformOrigin="1,1" />
                                    <Rectangle Width="1"  Fill="#d6c79b" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height" Value="25" />
            </Style>

            <!--行样式触发-->

            <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->

            <Style  TargetType="DataGridRow">
                <Setter Property="Background" Value="#F2F2F2" />
                <Setter Property="Height"  Value="25" />
                <Setter Property="Foreground"  Value="Black" />
                <Style.Triggers>

                    <!--隔行换色-->
                    <Trigger Property="AlternationIndex" Value="0">
                        <Setter Property="Background"  Value="#e7e7e7" />
                    </Trigger>
                    <Trigger Property="AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#f2f2f2" />
                    </Trigger>

                    <Trigger Property="IsMouseOver"  Value="True">
                        <Setter Property="Background" Value="#fbe178" />
                    </Trigger>
                    <Trigger Property="IsSelected"   Value="True">
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--单元格样式触发-->

            <Style TargetType="DataGridCell">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <TextBlock TextAlignment="Center" VerticalAlignment="Center">    
                            <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="Black" />
                    </Trigger>
                </Style.Triggers>
            </Style>


    </Window.Resources>
   

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Margin="5,0,0,0" Text="建筑物基本信息:" Grid.Row="0"/>
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,0,0">
            <TextBlock Text="请选择楼层："  />
            <ComboBox  x:Name ="my"  Height="20" Width="150"  ItemsSource="{Binding Path=AList,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                  ItemTemplate="{StaticResource DataTemplate1}"
                  SelectedIndex="0" HorizontalAlignment="Left">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"   
                            CommandParameter="{Binding ElementName=my}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </StackPanel>
        <Border BorderThickness="2,2,2,2" Grid.Row="2" BorderBrush="Red" Margin="2,20,2,2">
        <ListBox x:Name="lstImgs" VerticalAlignment="Stretch" Margin="5,10,5,20" BorderBrush="Green" 
                 BorderThickness="1,1,1,1" ItemsSource="{Binding Path=Rooms,Mode=OneWay}">
            <ListBox.Template>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Disabled">
                        <WrapPanel Orientation="Horizontal" IsItemsHost="True">
                        </WrapPanel>
                    </ScrollViewer>
                </ControlTemplate>
            </ListBox.Template>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border BorderThickness="0,0,0,0" BorderBrush="Black" Width="150" Height="100">
                            <Button x:Name="bton" Content="{Binding Path=FullPath}" ToolTip="{Binding Path=DataContext.Tips,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseMove">
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.MouseMoveCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox} }}" 
                                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}} }"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.MouseLeaveCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox} }}"
                                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}} }"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding Path=DataContext.ButtonClickCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox} }}" 
                                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}} }"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        </Border>
        <Border BorderBrush="Red" BorderThickness="2" Grid.Row="3" Margin="2,20,2,2">
            <DataGrid VerticalAlignment="Stretch" Margin="5,10,5,20" Name="personlistView" AutoGenerateColumns="True" AutoGeneratingColumn="personlistView_AutoGeneratingColumn"
                      ItemsSource="{Binding Path=Customers,Mode=OneWay}" AlternationCount="2" HeadersVisibility="Column" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <cmd:EventToCommand Command="{Binding MouseDoubleClickCommand}"
                                           CommandParameter="{Binding ElementName=personlistView,Path=SelectedItem}"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="AutoGeneratingColumn">
                        <cmd:EventToCommand Command="{Binding AutoGeneratingColumnCommand}"
                                            CommandParameter="{Binding personlistView}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <!--<DataGrid.Columns>
                    <DataGridTextColumn Header="ID000" Binding="{Binding ID}" Width="50"/>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="100"/>
                    <DataGridTextColumn Header="Age" Binding="{Binding Age}" Width="100"/>
            </DataGrid.Columns>-->
        </DataGrid>
        </Border>
    </Grid>
</Window>
