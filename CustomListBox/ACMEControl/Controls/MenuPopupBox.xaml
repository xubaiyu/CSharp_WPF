<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:ACMEControl.Converter"
    xmlns:local="clr-namespace:ACMEControl.Controls"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:cmd="http://www.galasoft.ch/mvvmlight">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ACMEControl;component/Style/Style.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <converter:Bool2Visibility x:Key="Bool2Visibility"/>
    <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Border Height="22" Width="65.894" BorderThickness="0" Background="Transparent">
                <Path x:Name="PART_Path" Visibility="Collapsed" Data="F1 M0.5,0.5 C0.5,0.5 59.798698,0.5 59.798698,0.5 59.798698,0.5 65.393698,6.936 65.393698,6.936 65.393698,6.936 64.998698,21.5 64.998698,21.5 64.998698,21.5 5.5,21.5 5.5,21.5 5.5,21.5 0.789,15.483 0.789,15.483 0.789,15.483 0.5,0.5 0.5,0.5 z" Height="22"  Width="65.894" 
                                   Stroke="#FF00E2FF" Fill="#513EF1E9"/>
            </Border>
            <StackPanel Orientation="Horizontal">
                <Border Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Height="17" Width="20" Background="{Binding IconBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:MenuPopupBox}}}"
                                        OpacityMask="{Binding IconBrushMask,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:MenuPopupBox}}}"/>

                <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Center"  Height="17" Width="35.894" Background="#02FFFFFF" Foreground="White"
                            FontSize="14.667" FontFamily="Microsoft YaHei"  Text="{TemplateBinding Content}"/>
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="PART_Path" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type local:MenuPopupBox}">
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MenuPopupBox}">
                    <StackPanel Background="{x:Null}">
                        <ToggleButton  ClickMode="Press" Template="{StaticResource ToggleButtonTemplate}" Content="{TemplateBinding MenuPopupText}"
                                           IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">

                        </ToggleButton>
                        <Border  Height="0"  BorderThickness="0"  HorizontalAlignment="Left" VerticalAlignment="Top" >
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" StaysOpen="False" Placement="Bottom"  x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid  MinWidth="{TemplateBinding ActualWidth}"  x:Name="DropDown" SnapsToDevicePixels="True"  Width="{TemplateBinding Width}" >
                                    <Border Width="128"  Height="9" BorderThickness="0" VerticalAlignment="Top" HorizontalAlignment="Left">
                                        <Border.Background>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Path  Data="F1M127,7.013C127,7.013 32.581,7.013 32.581,7.013 32.581,7.013 27.083,2.809 27.083,2.809 27.083,2.809 21.586,7.013 21.586,7.013 21.586,7.013 1,7.013 1,7.013 1,7.013 1,6.013 1,6.013 1,6.013 21.247,6.013 21.247,6.013 21.247,6.013 27.083,1.55 27.083,1.55 27.083,1.55 32.919,6.013 32.919,6.013 32.919,6.013 127,6.013 127,6.013 127,6.013 127,7.013 127,7.013z" Fill="#FF00E1FF" />
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Border.Background>
                                    </Border>
                                    <Border x:Name="downBorder" Margin="0,9,0,0"  VerticalAlignment="Top" HorizontalAlignment="Left" Width="128"  BorderThickness="1,0,1,1" BorderBrush="#FF00E1FF" Background="#5105D8F7"/>
                                    <ScrollViewer Margin="0,9" VerticalAlignment="Top" HorizontalAlignment="Left"  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" CanContentScroll="True" Background="{x:Null}"  BorderThickness="0" >

                                        <ItemsPresenter/>
                                        <!--<StackPanel IsItemsHost="True" Orientation="Vertical" KeyboardNavigation.DirectionalNavigation="Contained" Background="{x:Null}" />-->
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="true">
                            <Setter TargetName="DropDown" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDown" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <!--下面方式也可以-->
                        <!--<DataTrigger Binding="{Binding HasItems,RelativeSource={RelativeSource Self}}" Value="false">
                            <Setter TargetName="DropDown" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasItems,RelativeSource={RelativeSource Self}}" Value="true">
                            <Setter TargetName="DropDown" Property="Visibility" Value="Visible"/>
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <StackPanel Orientation="Horizontal" x:Name="PART_StackPanel">
                            <Border x:Name="PART_Border" Height="25" Width="25" Background="#4700E2FF">
                                <local:ComButton Height="25" Width="25" IsHitTestVisible="False" Background="White" OpacityMask="{Binding MenuIcon,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                            </Border>
                            <Border x:Name="PART_Label" Width="103" Height="25" Background="#02FFFFFF" >
                                <Label Foreground="White" FontSize="12" VerticalContentAlignment="Center" HorizontalContentAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" Width="103" Height="25" Content="{Binding Text,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                            </Border>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <cmd:EventToCommand Command="{Binding ItemClickCommand}"  CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type local:MenuPopupBox}}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </StackPanel>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBoxItem}}}" Value="true">
                            <Setter TargetName="PART_Border" Property="Background" Value="#990040FF"/>
                            <Setter TargetName="PART_Label" Property="Background" Value="#990040FF"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ComboBoxItem}}}" Value="true">
                            <Setter TargetName="PART_Border" Property="Background" Value="#990040FF"/>
                            <Setter TargetName="PART_Label" Property="Background" Value="#990040FF"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisualStyle}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
